// Code generated by MockGen. DO NOT EDIT.
// Source: loader.go

// Package mock_cmd is a generated GoMock package.
package mock_cmd

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	cmd "rmbr/cmd"
)

// MockRepository is a mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// Load mocks base method
func (m *MockRepository) Load() (*cmd.RmbrNotes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Load")
	ret0, _ := ret[0].(*cmd.RmbrNotes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Load indicates an expected call of Load
func (mr *MockRepositoryMockRecorder) Load() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockRepository)(nil).Load))
}

// Write mocks base method
func (m *MockRepository) Write(applications *cmd.RmbrNotes) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", applications)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write
func (mr *MockRepositoryMockRecorder) Write(applications interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockRepository)(nil).Write), applications)
}

// New mocks base method
func (m *MockRepository) New(note cmd.RmbrNote) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "New", note)
	ret0, _ := ret[0].(error)
	return ret0
}

// New indicates an expected call of New
func (mr *MockRepositoryMockRecorder) New(note interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*MockRepository)(nil).New), note)
}
